<template>
  <div class="popDriverMileage">
    <pop-up-widget title='行驶里程统计'></pop-up-widget>
    <div class="popDriverMileage_legend"  v-if="businessQyDzydData">
      <div></div>
      <div>公里数(公里)</div>
    </div>
    <div class="popDriverMileage_charts" v-if="businessQyDzydData">
      <!-- <barhor-sort chartTheme="dark" :data="barhorEventData"></barhor-sort> -->
      <ul class="list" v-if="showYoM =='y'   && businessQyDzydData &&  businessQyDzydData.ThisYear">
        <li v-for="(item,index) in businessQyDzydData.ThisYear"  :key="index"> 
          <div class="name" :title="item.vehicle_brand">{{item.vehicle_brand}}</div>
          <div class="rect" v-if="item.total_km!==null" 
          :style="{width:360*( Number(item.total_km)>max1?max1:Number(item.total_km))/max1+'px'}">
          </div>
          <div class="num">{{item.total_km}}</div>
        </li>
      </ul>
       <ul class="list" v-if="showYoM =='m'   && businessQyDzydData &&  businessQyDzydData.ThisMonth ">
        <li v-for="(item,index) in businessQyDzydData.ThisMonth"  :key="index"> 
          <div class="name" :title="item.vehicle_brand">{{item.vehicle_brand}}</div>
          <div class="rect" v-if="item.total_km!==null"
          :style="{width:360*(Number(item.total_km)>max2?max2:Number(item.total_km))/max2+'px'}">
          </div>
          <div class="num">{{item.this_Month_Waybill_Quantity}}</div>
        </li>
      </ul>
    </div>
  </div>
</template>
<script>
/*eslint-disable */
import { mapState } from 'vuex'
import PopUpWidget from '../../../components/PopUpWidget'
import barhorSort from '../../../components/charts/barhorSort'

export default {
  components: {
    PopUpWidget,
    barhorSort,
  },
  computed: {
     ...mapState("accumulatedWorkloadStatistics", ["showYoM"]),
     ...mapState('popupdriverMileageStore', ['businessQyDzydData']),
      max1(){
      return  this.businessQyDzydData &&  
      this.businessQyDzydData.ThisYear  &&  
       this.businessQyDzydData.ThisYear[0]  && 
        this.businessQyDzydData.ThisYear[0].total_km   &&  
          Number(this.businessQyDzydData.ThisYear[0].total_km )
    },
    max2(){
      return   this.businessQyDzydData && 
       this.businessQyDzydData.ThisMonth   &&   
       this.businessQyDzydData.ThisMonth[0]  &&   
         this.businessQyDzydData.ThisMonth[0].total_km  &&  
         Number(this.businessQyDzydData.ThisMonth[0].total_km)
    }
    // ...mapState('popupdriverhealthy', ['healthyData']),
    // getBarhorEventData() {
    //   const b = this.barhorEventData.sort((a, b) => a.value > b.value)
    //   return b
    // },
  },
  data() {
    return {
      // activeTagKey: 1,
      // barhorEventData: [
      //   { name: '危险路段报警1', value: 555 },
      //   { name: '危险路段报警2', value: 112 },
      //   { name: '危险路段报警3', value: 200 },
      //   { name: '危险路段报警4', value: 114 },
      //   { name: '危险路段报警5', value: 115 },
      //   { name: '危险路段报警6', value: 16 },
      // ],
      // barhorEventData: [
      //   {
      //     name: '公里数(公里)',
      //     data: [
      //       { name: '危险路段报警1', value: 555 },
      //       { name: '危险路段报警2', value: 112 },
      //       { name: '危险路段报警3', value: 200 },
      //       { name: '危险路段报警4', value: 114 },
      //       { name: '危险路段报警5', value: 115 },
      //       { name: '危险路段报警6', value: 16 },
      //     ],
      //   },
      // ],
    }
  },
  methods: {
    // selectTag(item) {
    //   this.activeTagKey = item
    // },
  },
}
</script>
<style lang="scss" scoped>
@mixin size($width,$height) {
  width: $width;
  height: $height;
}
.popDriverMileage{
  @include size(550px,100%);
  position: relative;
  &_legend{
    @include size(120px,20px);
    margin-right: 33.4px;
    margin-top:3px;
    position: absolute;
    right:0;
    div{
      &:nth-child(1){
        @include size(11.5px,2px);
        background: #89DDDF;
        position: absolute;
        top:10px;
        left:20px;
      }
      &:nth-child(2){
        @include size(120px,20px);
        color: #B5B5B5;
        font-size: 14px;
        text-align: right;
        line-height: 20px;

      }
    } 
  }
  &_charts{
    @include size(550px,170px);
    margin-top:40px;
    .list {
      width: 550px;
      height: 170px;
      overflow-y: auto;
      list-style: none;
      li {
        width: 550px;
        height: 25px;
        margin-top: 5px;
        overflow: hidden;
        div {
          height: 15px;
          line-height: 15px;
          text-align: center;
          // background: rgba(0, 191, 229, 0.5);
          color: #fff;
          float: left;
          font-size: 14px;
        }
        .name {
          width: 80px;
          padding-left: 15px;
          box-sizing: border-box;
          cursor:default;
          overflow: hidden;
          // white-space: nowrap;
          // text-overflow: ellipsis;
          // background: red;
        }
        .rect {
          // max-width: 425px;
          width: 360px;
          margin-left: 10px;
          // width: 100px;
          height: 15px;
          // margin-top: 10px;
          background: #89dddf;
          margin-left: 10px;
          float: left;
          // background: green;
        }
        .num {
          width: 40px;
          height: 15px;
          margin-left: 10px;
          padding-left: 5px;
          box-sizing: border-box;
          // background: yellow;
        }
      }
    }
    .list::-webkit-scrollbar {
      width: 5px;
      background: rgba(0, 0, 0, 0);
    }
    .list::-webkit-scrollbar-thumb {
      background: #05d0eb;
      border-radius: 5px;
    }
  }
}
</style>

<template>
  <div>
    <pop-up-widget title="有责事故详细信息"></pop-up-widget>
    <div class="blameAccidentDetailsInfoCon">
      <!-- 筛选框 -->
      <div class="filterCon clearfix">
        <div class="itemWrap fl">
          <div class="subTitle">姓名</div>
          <div class="content">{{ryjb.name}}
            <div class="rotateBox"></div>
          </div>
        </div>
        <div class="itemWrap fl">
          <div class="subTitle">机构</div>
          <div class="content">{{ryjb.qy_cdxx.entity_name}}
            <div class="rotateBox"></div>
          </div>
        </div>
        <div class="selectCon clearfix">
          <div class="itemCon fr clearfix">
            <div class="fl selectMon">统计周期</div>
            <div class="fl">
              <key-value-select width="90px"
                                :data="selectYearData"
                                @select='select("year",$event)'
                                :defaultValue="yearValue"></key-value-select>
            </div>

            <div class="fl">
              <key-value-select width="90px"
                                :data="selectMonthData"
                                @select='select("month",$event)'></key-value-select>
            </div>

            <div class="fl">
              <key-value-select width="90px"
                                :data="selectDayData"
                                @select='select("day",$event)'></key-value-select>
            </div>
          </div>
        </div>
      </div>

      <!-- 内容部分 -->
      <div class="rewardListCon eleScrollBar">
        <list-component :listData="blameAccidentDetailsInfo"
                        v-if="blameAccidentDetailsInfo"
                        :titlesData="titlesData"></list-component>
      </div>
    </div>
  </div>
</template>

<script type="text/javascript">
import { mapState, mapActions } from 'vuex'
import PopUpWidget from '../../../components/PopUpWidget'
import KeyValueSelect from '../../../components/KeyValueSelect'
// 列表组件
import ListComponent from '../../../components/ListComponent'
import Dictionary from '../../../util/dictionary'

const { date: { year, month, day } } = Dictionary

export default {
  name: 'driverBehaviorAlarmDetailsInfo',
  components: {
    PopUpWidget,
    KeyValueSelect,
    ListComponent,
    Dictionary,
  },
  computed: {
    ...mapState('blameaccidentdetailsinfo', ['blameAccidentDetailsInfo']),
    ...mapState('driverbase', ['ryjb']),
    contentWidth() {
      return (
        this.titlesData.reduce((total, curr) => total + curr.width, 0) + 10
      )
    },
    fetch() {
      return {
        driver_id: this.ryjb.driver_id,
        year: this.year,
        month: this.month,
        day: this.day,
      }
    },
  },
  methods: {
    ...mapActions('blameaccidentdetailsinfo', ['getBlameAccidentDetailsInfo']),
    select(name, item) {
      this[name] = item.value
      this.getBlameAccidentDetailsInfo(this.fetch)
    },
  },
  data() {
    return {
      yearValue: `${new Date().getFullYear()}年`,
      cycleYeardata: year,
      cycleMonthdata: month,
      cycleDatedata: day,
      titlesData: [
        { name: '运单编号', key: 'waybill_code', width: 200 },
        { name: '车辆ID', key: 'vehicle_id', width: 100 },
        { name: '事故时间', key: 'accidenttype_time', width: 200 },
        { name: '事故地点', key: 'accident_location', width: 400 },
        { name: '经度', key: 'latitude', width: 100 },
        { name: '纬度', key: 'longitude', width: 100 },
        { name: '事故等级', key: 'sgdj.accident_level', width: 100 },
        { name: '事故责任', key: 'sgzr.accident_responsibility', width: 100 },
      ],
      selectYearData: year,
      selectMonthData: [{ label: '全年', value: null }, ...month],
      selectDayData: [{ label: '全月', value: null }, ...day],
      year: `${new Date().getFullYear()}`,
      month: null,
      day: null,
    }
  },
}
</script>

<style lang="scss" scoped>
// 公用样式
@mixin size($w,$h) {
  width: $w;
  height: $h;
}

// 自定义滚动条
.eleScrollBar::-webkit-scrollbar {
  @include size(5px,5px);
  background: url("../../../assets/driver/scroll.png") no-repeat center center;
  // position: relative;
  // right: 10px;
  // top: 5px;
  background-size: 100% 100%;
}
.eleScrollBar::-webkit-scrollbar-thumb {
  background: rgba(5, 208, 235, 1);
}

// 三级菜单内容
.blameAccidentDetailsInfoCon {
  // @include size(100%,);
  width: 100%;
  min-height: 200px;
  // background:green;

  // 筛选框
  .filterCon {
    @include size(100%,50px);
    // background: green;
    .itemWrap {
      @include size(350px,25px);
      line-height: 25px;
      float: left;
      .subTitle {
        @include size(100px,100%);
        line-height: 25px;
        text-align: left;
        color: #89dddf;
        font-size: 14px;
        float: left;
      }
      .content {
        @include size(250px,100%);
        line-height: 23px;
        padding-left: 30px;
        color: #fff;
        font-size: 14px;
        font-weight: bold;
        border: 1px solid #89dddf;
        float: left;
        position: relative;
        box-sizing: border-box;
        .rotateBox {
          @include size(7px,7px);
          position: absolute;
          top: 8px;
          left: 10px;
          transform: rotate(45deg);
          background: #05d0eb;
        }
      }
    }
    .itemWrap:nth-child(n + 2) {
      margin-left: 10px;
    }
    .selectCon {
      @include size(100%, 25px);
      margin-top:30px;
      color: #89dddf;
      font-size: 14px;
      line-height: 25px;
      .itemCon {
        div:nth-child(n + 2) {
          margin-left: 5px;
        }
      }
    }
  }

  // 内容部分
  .rewardListCon {
    width: 100%;
    height: 290px;
    box-sizing: border-box;
    border: 1px solid #81d9e5;
    position: relative;
    padding-top: 10px;
    padding-bottom: 5px;
    margin-top: 10px;
    // overflow-x: auto;
    // overflow-y: hidden;
  }
}
</style>